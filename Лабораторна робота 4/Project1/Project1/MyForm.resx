<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAApQAAABSCAYAAADq4US8AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAHOFJREFUeF7tnQu8lHMaxykpCqWWNquWUiSlm1wqISqVUmGlsjZsLi1rIxWtlHXZ
        RVYUm93KXReUlMumNpHkWklCLa1yqSyWddn9736f876nOXNmzsyZyzvvzPy+n8+f5j8zZ+admXPm+z7/
        53n+O7kIdtppJ3fQQQfl9ahatarbe++9Y16noaGhoVEc44ADDiiI7zQNjbAPfs/MIe2/Hv5kPvPjH//Y
        /fa3v/UuCSGEKEb+8Y9/FMR3mhBhR0IphBCiYJFQChEMEsoCZ+XKle6pp57Ki7FmzRrvWQshRGaQUAoR
        DBLKAueII46wXNKGDRuGfpx44onuiy++8J65EEKkTzEJ5X//+1/31Vdf2f/TYevWrW7p0qVu8+bN3kx4
        4Vj/+c9/ui+//DLt4w4DP/zwg73+/D9Zvv32Wzv+XJNVoeTN5SA///zzuONf//qXd+vMIqEsoWnTpm7B
        ggXeJSGEKC6KQSi///579/e//90NGzbMde/e3QQjFbZv3+6uuOIKt+eee7pq1aq5N99807smvHz22Wfu
        0EMPdZdccon7z3/+483mF//+97/dSy+95IYOHep69erlbrnlFjsxSMTXX3/trrrqKrf77ru7nXfe2R19
        9NG20pcrsc6qUGLZxx13nGvWrFnc8atf/cq7dWaRUJYI/R577OE2btzozQghRHFR6EKJTE6ePNn17dvX
        pOKkk05KWSgBKevcubM77LDDkpKaXPLdd9+5X/7yl65KlSp5K5RI4ZAhQ2w18dVXX006Msn9zjnnHHfN
        Nde45557zo0YMcLtsssubv/993fvv/++d6tgyapQPv3006569equXr167qc//am1b/AHwseHHxPPBhJK
        5z766CP7gOXrWZsQQqRLsSx5b9myxe2zzz5pCyWRzh/96Efu6quv9mbCy5w5cywqR4QuH4WS6OrJJ5/s
        2rVr5z755BNvNjmIRD7++OOl0Uj+f/HFF9tn/ZFHHrG5oMmqUJ5//vnu5ptvtrw4lrYjxz333GMfgtde
        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
</value>
  </data>
</root>